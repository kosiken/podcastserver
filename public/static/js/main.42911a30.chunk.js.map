{"version":3,"sources":["store.ts","components/PodcastView.tsx","components/Category.tsx","components/Header.tsx","api.ts","components/PodcastGrid.tsx","utils.ts","components/Episode.tsx","components/Player.tsx","useDebounce.ts","App.tsx","reportWebVitals.ts","index.tsx","components/Category.module.css"],"names":["InitialState","podcasts","color","backgroundColor","isLoading","page","RootReducer","combineReducers","app","state","action","s","type","concat","podcast","error","id","console","log","createMStore","applyMiddleware","thunk","createStore","fun","store","useStyles","makeStyles","theme","root","display","margin","padding","cursor","details","flexDirection","controls","alignItems","paddingLeft","spacing","paddingBottom","cover","maxWidth","maxHeight","width","playIcon","height","PodcastView","classes","key","onClick","dispatch","useDispatch","useState","setBackgroundColor","setColor","useEffect","image","Image","crossOrigin","src","onload","colors","getImagePalette","Card","className","style","alt","title_original","CardContent","Typography","fontWeight","textAlign","publisher_original","Category","selected","category","props","classnames","styles","active","component","createStyles","flexGrow","mhomeIcon","marginRight","title","Header","AppBar","position","elevation","Toolbar","variant","Api","axios","create","baseURL","headers","PodcastsApiInstance","api","this","a","options","limit","get","params","ret","data","Error","rss","post","body","loader","PodcastGrid","useSelector","loading","mError","setMError","sel","setSelected","React","getPodcasts","then","res","catch","err","message","length","CircularProgress","map","cat","i","Grid","container","p","item","lg","sm","xs","setTitle","maxlen","slice","durationToStr","dur","n","Math","floor","b","toString","episode","Episode","index","target","useRef","isHovering","useHover","ref","flex","duration","main","indicator","top","zIndex","left","content","acb","acc","boxShadow","background","Player","expanded","setExpanded","isPlaying","setPlaying","value","delay","debouncedValue","setDebouncedValue","isSetting","setIsSetting","handler","setTimeout","clearTimeout","useDebounce","shouldPlay","mIndex","setIndex","setValue","playlist","setPlaylist","elapsed","setElapsed","play","setPlay","r","current","readyState","pause","undefined","currentTime","getAudio","addEventListener","e","audio","Helmet","IconButton","Fragment","Accordion","AccordionSummary","aria-controls","CardMedia","AccordionDetails","description_original","overflowY","bottom","disabled","len","Slider","onChange","event","newValue","num","Number","round","App","property","name","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.42911a30.chunk.js","sourcesContent":["\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport { PlayerAudio, Podcast } from './cast'\n\nexport interface State {\n    podcasts: Podcast[];\n    color: string;\n    backgroundColor: string;\n    isLoading: boolean;\n    error?: string;\n    podcast?: Podcast;\n    page: string;\n\n}\n\nconst InitialState: State = {\n    podcasts: [],\n    color: \"#000000\", backgroundColor: \"#fff0ff\",\n    isLoading: true,\n    page: \"grid\"\n\n}\n\nexport type Action =\n    | { type: \"podcasts\", podcasts: Podcast[] }\n    | { type: \"select\", podcast: Podcast }\n    | { type: \"add\", podcast: Podcast }\n    | { type: \"audio\", audio: PlayerAudio[] }\n    | { type: \"theme\", backgroundColor: string, color: string }\n    | { type: 'failure', error: string }\n    | {type: 'close'};\n\n\n\nfunction reducer(state: State = InitialState, action: Action): State {\n    let s: State = state\n\n    switch (action.type) {\n\n        case \"close\":\n            s = {...s, page: 'grid'}\n            break;\n        case \"podcasts\":\n            s = { ...s, isLoading: false, podcasts: action.podcasts };\n            break;\n        case \"theme\":\n            s = { ...s, backgroundColor: action.backgroundColor, color: action.color };\n            break;\n        case \"add\":\n            s = { ...s, podcasts: s.podcasts.concat([action.podcast]) };\n            break;\n        case 'failure':\n            s = { ...s, error: action.error };\n            break;\n        case \"select\":\n            if(s.podcast) {\n            if(s.podcast.id === action.podcast.id) \n            {\n             s = { ...s, page: \"player\" };\n            }\n                       else s = { ...s, podcast: action.podcast, page: \"player\" };\n            }\n           else s = { ...s, podcast: action.podcast, page: \"player\" };\n            break;\n        default:\n            console.log(\"Invalid Action -> \\n\", action);\n            break;\n\n\n    }\n //console.log(state)\n    return s;\n\n}\nexport interface AppState {\n    app: State;\n}\nconst RootReducer = combineReducers({\n   app: reducer\n  });\n  const createMStore = applyMiddleware(thunk)(createStore);\nconst fun = () => {\n    let store =  createMStore(RootReducer);\n    return { store };\n}\n\nexport default fun;\n","import React, { useEffect, useState } from 'react';\nimport getImagePalette from \"image-palette-core\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from '@material-ui/core/CardContent';\n\n \nimport Typography from '@material-ui/core/Typography';\nimport { Podcast } from '../cast';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useDispatch } from 'react-redux';\nimport {   Action } from \"../store\"\n\nimport { Dispatch } from 'redux';\n\ntype PodcastViewProps = {\n  podcast: Podcast;\n  key?: string | number;\n  children?: React.ReactNode;\n  onClick?: (podcast: Podcast, color: string,\n    backgroundColor: string) => void;\n}\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex', 'max-width': 300,\n\n    margin: 20,\n    'flex-direction': 'column',\n    '-ms-flex-align': 'center',\n    'align-items': 'center', padding: '10px 0', cursor: 'pointer',\n  },\n  details: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  controls: {\n    display: 'flex',\n    alignItems: 'center',\n    paddingLeft: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n  }, cover: {\n    maxWidth: 200, maxHeight: 200,\n    width: \"90%\"\n  },\n  playIcon: {\n    height: 38,\n    width: 38,\n  }\n}));\n\nconst PodcastView: React.FunctionComponent<PodcastViewProps> = ({ podcast, key, onClick = () => { } }) => {\n  const classes = useStyles();\n  const dispatch = useDispatch<Dispatch<Action>>()\n  const [backgroundColor, setBackgroundColor] = useState(\"#ffffff\");\n  const [color, setColor] = useState(\"#000000\");\n//  const [altColor, setAltColor] = useState(\"#cccccc\");\n  useEffect(() => {\n    const image = new Image();\n    if (podcast.image) {\n      image.crossOrigin = \"Anonymous\"\n//      console.log(\"lll\")\n      image.src = podcast.image;\n      image.onload = () => {\n        let colors = getImagePalette(image);\n        setBackgroundColor(colors.backgroundColor);\n        setColor(colors.color);\n       // setAltColor(colors.alternativeColor);\n      }\n    }\n\n  }, [podcast.image]);\n\n  return (\n    <Card className={classes.root} style={{ backgroundColor, color }} onClick={() => {\n      dispatch({ type: \"theme\", backgroundColor, color })\n      dispatch({ type: \"select\", podcast })\n    }}>\n      <img className={classes.cover} src={podcast.image} alt={podcast.title_original} />\n      <CardContent>\n        <Typography style={{ fontWeight: 'bold', textAlign: 'center' }}>\n          {podcast.publisher_original}\n\n        </Typography>\n\n      </CardContent>\n    </Card>\n  )\n\n\n\n}\n\nexport default PodcastView;\n","import React from 'react';\n\nimport Typography from '@material-ui/core/Typography';\nimport classnames from 'classnames';\nimport styles from './Category.module.css';\n\n\ntype CategoryProps = {\n   selected: boolean;\n   category: string;\n   key?: string | number;\n     onClick?: () => void;\n}\n\n\n\n\nconst Category: React.FunctionComponent<CategoryProps> = ({\n   selected, category, ...props\n}) => {\n\n   const classes = classnames(styles.category, {\n      [styles.active]: selected\n\n   });\n\n   return (\n      <Typography className={classes} component=\"span\" {...props}>\n         {category}\n      </Typography>\n   )\n\n};\n\n\nexport default Category;\n\n","import React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n \n\n\n\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    mhomeIcon: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n  }),\n);\n\nconst Header = ({className = \"home\" }) => {\n  const classes = useStyles();\n\n  return (\n\n      <AppBar position=\"static\" style={{ backgroundColor:\"#ffffff\", color: \"#000000\" }} elevation={0}>\n        <Toolbar>\n      \n        \n         \n          <Typography variant=\"h6\" className={classes.title}>\n            Podcasts\n          </Typography>\n       \n       \n       \n        </Toolbar>\n      </AppBar>\n \n  );\n}\nexport default Header;\n\n","import axios, { AxiosInstance, AxiosResponse } from 'axios';\nimport { PlayerAudio, Podcast } from './cast';\nconst Api = axios.create({\n    baseURL: \"https://lionpods.herokuapp.com\",\n    headers: { 'Content-Type': 'application/json' },\n})\nexport interface PodcastRequest {\n    limit?: number;\n    genre?: string; author?: string;\n    page: number;\n}\n\nclass PodcastsApi {\n    api: AxiosInstance;\n    constructor(api: AxiosInstance) {\n        this.api = api;\n    }\n\n    async getPodcasts(options: PodcastRequest = {limit: 10, page: 0}): Promise<Podcast[]> {\n        let ret: AxiosResponse<Podcast[]>;\n        try {\n            ret = await this.api.get(\"/podcasts\", {\n                params: options\n            })\n            return ret.data;\n        }\n        catch (err) {\n            throw new Error(\"Error while fetching\");\n\n        }\n\n\n    }\n\n    async addPodCast(rss: string): Promise<Podcast> {\n        let ret: AxiosResponse<Podcast>;\n        try {\n            ret = await this.api.post(\"/podcasts\", {\n                body: {\n                    rss\n                }\n            })\n            return ret.data;\n        }\n        catch (err) {\n            throw new Error(\"Error while adding\");\n\n        }\n\n\n    }\n\n    async getAudio(rss: string, limit = 10, page = 1): Promise<PlayerAudio[]> {\n        let ret: AxiosResponse<PlayerAudio[]>;\n        try {\n            ret = await this.api.get('/podcast', {\n                params: {\n                    rss, limit, page\n                }\n            }) \n            return ret.data;\n        }\n        catch (err) {\n            throw new Error(\"Error while adding\");\n\n        }\n\n    }\n}\n\n\nexport const PodcastsApiInstance = new PodcastsApi(Api);\n","import React, { useState } from 'react'\n\nimport PodcastView from './PodcastView';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Category from './Category';\nimport Header from './Header';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { AppState, State, Action } from \"../store\"\nimport { PodcastsApiInstance } from '../api';\nimport { Dispatch } from 'redux';\n\nconst useStyles = makeStyles((theme) => ({\n    loader: {\n        height: '90vh', display: 'flex',\n        'justify-content': 'center',\n        'align-items': 'center',\n        width: '100%'\n    }\n    \n}))\n\nconst PodcastGrid: React.FunctionComponent = () => {\n    const classes = useStyles();\n    const dispatch = useDispatch<Dispatch<Action>>()\n    const { podcasts, isLoading: loading, page } = useSelector<AppState, State>((state) => {\n        return state.app\n    })\n    const categories = [\"All\", \"Comedy\", \"Sports\",\n    \"Tech\", \"Lifestyle\" ];\n    const [mError, setMError] = useState(\"\");\n    const [sel, setSelected] = useState(\"All\");\n    const init = (): void => {\n\n        PodcastsApiInstance.getPodcasts({ page: 1, limit:6 }).then(res => {\n            dispatch({ type: \"podcasts\", podcasts: res })\n            // setLoad(false);\n            setMError(\"\")\n        }).catch(err => {\n            console.log(err)\n            setMError(err.message)\n        })\n    }\n\n    React.useEffect(() => {\n        init()\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    \n    if (mError.length) return (\n        <div className={classes.loader}>\n            <Typography >\n                {mError}\n            </Typography>\n        </div>\n    )\n    if (loading) return (\n        <div className={classes.loader}>\n            <CircularProgress /><br/>\n            <Typography >\n                Loading Podcasts\n            </Typography>\n\n        </div>\n    )\n\n    return (\n        <div className={\"disp \" + (page === \"grid\" ? \"\" : \"nill\")}>\n        <Header /> \n        <section id=\"sel\" style={{width: \"80%\",\n        margin: \"10px auto 0\", padding:\"8px\" }}>\n      {categories.map((cat, i) =>  (<Category key={\"\"+i} category={cat} selected={sel === cat} \n      onClick={()=> {setSelected(cat)}} /> ))}\n        \n        </section>\n        \n        \n            <Grid container className=\"podcasts\">\n\n                {podcasts.map((p, i) => (\n\n                    <Grid item lg={3} sm={4} xs={6} key={'podcast' + i} ><PodcastView podcast={p} />\n\n                    </Grid>))}\n\n            </Grid>\n    \n        </div>\n    )\n}\n\nexport default PodcastGrid\n","export const setTitle = (title: string, maxlen: number) => {\n  if (title.length > maxlen) return title.slice(0, maxlen - 6) + '...';\n  return title;\n}\n\nexport const durationToStr = (dur: number) => {\n  let n = (Math.floor(dur / 60)) + \":\";\n  let b = (dur % 60).toString();\n  b = b.length < 2 ? ('0' + b) : b\n  return n + b;\n}\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport useHover from '@react-hook/hover';\nimport { PlayerAudio } from '../cast';\nimport { setTitle, durationToStr } from '../utils';\n\n\ntype EpisodeProps = {\n  episode: PlayerAudio;\n  key?: string | number; color: string;\n  backgroundColor: string;\n  index: number;\n\n children?: React.ReactNode;\n  onClick?: (episode: PlayerAudio, index: number) => void;\n}\n\n\nconst useStyles = makeStyles((theme) => ({\n\n\n  episode: {\n    display: 'flex',\n    \n    \n    \n    alignItems: 'center',\n    margin: '2px 0 10px',\n    padding: '2px 5px', 'justify-content': 'center', cursor: 'pointer'\n  }\n\n}));\n\n\nconst Episode: React.FunctionComponent<EpisodeProps> = ({ episode: p, color, index, backgroundColor, onClick = () => { } }) => {\n const classes = useStyles();\n  const target = React.useRef<HTMLDivElement>(null);\n  const isHovering = useHover(target)\n  return (<div ref={target} className={classes.episode} style={{\n    color: isHovering ? backgroundColor : color,\n    backgroundColor: isHovering ? color : backgroundColor\n  }} onClick={() => {\n    onClick(p, index);\n  }}>\n    <Typography component=\"span\" style={{ flex: 1 }}>\n      {p.episode}\n    </Typography>\n\n    <Typography style={{ flex: 8 }}>\n      {setTitle(p.title, 35)}\n    </Typography>\n    <Typography component=\"span\" variant=\"caption\" style={{ flex: 1 }}>\n      {durationToStr(p.duration)}\n    </Typography>\n\n  </div>\n  )\n\n}\n\n\nexport default Episode\n","import React from 'react';\n\nimport { Podcast,PlayerAudio } from '../cast';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport IconButton from '@material-ui/core/IconButton';\nimport { Helmet } from 'react-helmet';\nimport Typography from '@material-ui/core/Typography';\nimport {\n  MdArrowBack as Back, MdPause as PauseIcon, MdSkipNext as SkipNextIcon, MdSkipPrevious as SkipPreviousIcon, MdPlayArrow as PlayArrowIcon\n} from 'react-icons/md';\nimport Slider from '@material-ui/core/Slider';\nimport Grid from '@material-ui/core/Grid';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport Episode from './Episode';\nimport useDebounce from '../useDebounce'\nimport {PodcastsApiInstance} from '../api';import { setTitle, durationToStr } from '../utils';\nimport { useSelector, useDispatch   } from 'react-redux';\nimport { Dispatch } from 'redux';\nimport {AppState, Action, State} from \"../store\"\n   \ntype PlayerProps = {\n  podcast?: Podcast;\n  key?: string | number;\n  children?: React.ReactNode;\n }\n\n\nconst useStyles = makeStyles((theme) => ({\n  main: {\n    'min-width': 300,\n    \"height\": \"100vh\",\n 'max-width': 500,\n    padding: '0 8px 8px',\n    margin: '0 2px 2px 0',\n    'box-shadow':\n      '0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)',\n       display: 'flex', \n       flexDirection:\"column\",\nwidth:\"30%\"\n\n  },\n    indicator: {\n    width: '100vw',\n    position: 'fixed',\n    top: 0,\n    zIndex: 999, left: 0,\n\n\n  },\n  \n  root: {\n    display: 'flex', 'box-shadow': 'none', padding: 5,\n    'justify-content': 'space-between', width: \"100%\"\n  },\n  details: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  content: {\n    flex: '1 0 auto',\n  },\n  acb: {\n    display: 'block',\n    padding: 0\n  },\n  acc: {\n    boxShadow: 'none',\n    background: 'none',\n    padding: 0,\n    '&::before': { background: 'none',}\n  },\n  cover: {\n    width: 90,height:90\n    \n  },\n  controls: {\n    display: 'flex',\n    alignItems: 'center',\n    paddingLeft: theme.spacing(1),\n    paddingBottom: theme.spacing(1), 'justify-content': 'center'\n  },\n  playIcon: {\n    height: 38,\n    width: 38,\n  },\n\n  episode: {\n    display: 'flex',\n    alignItems: 'center',\n    margin: '2px 0 10px',\n    padding: '2px 5px', 'justify-content': 'center', cursor: 'pointer'\n  }\n\n}));\n\n\n\n\n/*\n    const Episodes:PlayerAudio[] = [\n    {\n    src: \"aiffyep2.mp3\",\n    typ: \"audio/mpeg\",\n    title: \"How to Stop Being Judgemental - Episode 3\",\n    duration: 352,\n    episode:3\n    },\n\n    {\n    src: \"aiffyep2.mp3\",\n    typ: \"audio/mpeg\",\n    title: \"How to Stop Being Judgemental - Episode 3\",\n    duration: 352,\n    episode:3\n    },\n    {\n    src: \"aiffyep2.mp3\",\n    typ: \"audio/mpeg\",\n    title: \"How to Stop Being Judgemental - Episode 3\",\n    duration: 352,\n    episode:3\n    }\n    ]\n\n*/\n\nconst Player: React.FunctionComponent<PlayerProps> = () => {\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n   const dispatch = useDispatch<Dispatch<Action>>()\n const {backgroundColor, color, podcast, page} = useSelector<AppState, State>((state)=> {\n   return state.app\n })\n\n  const [isPlaying, setPlaying] = React.useState(false);\n  const [shouldPlay, isSetting] = useDebounce(isPlaying,200)\n  const [mIndex, setIndex] = React.useState(0);\n  const [value, setValue] = React.useState(0);\n  let [playlist, setPlaylist] = React.useState<PlayerAudio[]>([]);\n  const [elapsed, setElapsed] = React.useState(0);\n  let [play, setPlay] = React.useState<PlayerAudio>();\n  const ref = React.useRef<HTMLAudioElement>(null);\n  const [mError, setMError] = React.useState(\"\");\n\n\n \n  const init = (): void => {\n    (async () => {\n      setElapsed(0);\n      setPlaylist([])\n      setPlay(undefined);\n      let r = ref.current;\n      setExpanded(false);\n      setPlaying(false);\n      setMError(\"\")\n \n      if (r) {\n        r.pause()\n        r.currentTime = 0\n      }\n      if(podcast === undefined) return;\n      if (podcast.image) {\n        try {\n         \n          let n: PlayerAudio[];\n          n = await PodcastsApiInstance.getAudio(podcast.rss);\n         setPlaylist(n);\n          setExpanded(true);\n\n        }\n        catch (err) {\n        console.log(err)\n          setMError(\"Error loading podcast\")\n        }\n      }\n\n    })()\n  }\n\n  React.useEffect(() => {\n    if (!play) return;\n    let r = ref.current;\n    if (r == null) return;\n    if (isPlaying) {\n      if (r.readyState >= 2) {\n        r.play()\n      }\n\n\n    }\n    if (!isPlaying) r.pause();\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isPlaying])\n\n  React.useEffect(() => {\n    init()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [podcast])\n  \n  React.useEffect(() => {\n    if (play) {\n   //  alert(\"here\")\n      let r = ref.current\n      if (r) {\n        r.pause();\n      \n        \n        r.src = play.src;\n        r.addEventListener(\"timeupdate\", () => {\n          let e = (Math.floor(r?.currentTime || 0))\n\n          setElapsed(e)\n          if (play) setValue((e / play.duration) * 100)\n          \n        });\n        r.play()\n        r.addEventListener(\"loadeddata\", () => {\n       //  alert(\"loaded\")\n          if (r && (r.readyState >= 2)) {\n         \n        //  r.play();\n          setPlaying(true)\n          }\n        });\n      }\n      \n    }\n  }, [play])\n  React.useEffect(() => {\n    if (!playlist.length) return;\n    let audio = playlist[mIndex];\n    if (audio.episode !== play?.episode) {\n    setValue(0)\n      let r = ref.current\n      if (r) r.currentTime = 0;\n      \n    setPlay(audio)}\n\n// eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [mIndex])\n  \n  \n  React.useEffect(() => {\nconsole.log(\"88\")\n\n  }, [backgroundColor])\n  \n  const renderPod = () => {\n      if (podcast) return (\n       <React.Fragment>  \n  \n          <Accordion className={classes.acc}>\n\n        <AccordionSummary\n\n          className={classes.acb}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n        >\n          <Card className={classes.root} style={{ backgroundColor, color }} >\n            <div className={classes.details}> <CardContent className={classes.content}>\n            <Typography component=\"h5\" variant=\"h5\">\n                {setTitle(podcast.publisher_original, 25)}\n              </Typography>\n              <Typography variant=\"subtitle1\">\n                {setTitle(podcast.title_original, 35)}\n              </Typography>\n            </CardContent>\n            </div>\n\n             <CardMedia\n              className={classes.cover}\n              image={podcast.image}\n              title={podcast.title_original}\n            />\n          </Card>\n        </AccordionSummary>\n        <AccordionDetails style={{ display: 'block', maxHeight: '300px' }}>\n         <Typography component=\"span\" style={{ flex: 1 }}>\n   {podcast.description_original}\n    </Typography>\n        </AccordionDetails>\n      </Accordion> \n      \n   <div style={{height:\"70%\", overflowY:playlist.length > 5 ? \"scroll\" : \"hidden\"}}>\n   { playlist.map((p, i) => { return (<Episode episode={p} key={'episode' + i} \n backgroundColor={backgroundColor}\n                color={color} index={i} onClick={(audio, index) => {\n\n                  setIndex(index);\n                  setPlay(audio);\n                }} />)\n   })\n                \n                }\n                <div style={{textAlign: 'center'}} >\n                \n                {!expanded && (<CircularProgress color=\"inherit\"  />) }\n                </div>\n</div>\n</ React.Fragment>\n    )\n    return <div />\n  \n  }\n  return (\n    <div className={\"main \" + (page === \"player\" ? \"\" : \"none\") } style={{ backgroundColor, color }}>\n       <Helmet>\n         <title>{play?.title || podcast?.title_original || \"Podcasts\" } </title>\n       </Helmet>\n  \n    <div id=\"back\">\n    <IconButton style={{ color}}  onClick={()=> {\n       dispatch({ type: \"close\"})\n    \n    \n    }} > <Back/> </IconButton>\n    </div >\n    <div style={{height:\"65%\"}}>\n{renderPod()}\n      </div>\n       <div style={{ position: 'relative', bottom: 0, left: 0, width: '100%' }}>  <Typography style={{ fontWeight: 'bold', textAlign: 'center' }}>\n        {setTitle(play?.title || \"No episode\", 35)}\n      </Typography>\n      {!!mError.length && (<Typography style={{ textAlign: 'center' }} variant=\"subtitle1\">{mError}</Typography>)}\n   <div className={classes.controls} style={{ color }}>\n\n        <IconButton style={{ color }}  disabled={!playlist.length} onClick={() => {\n          if (mIndex > 0) setIndex(mIndex - 1);\n        }}>\n          <SkipPreviousIcon />\n\n        </IconButton>\n        <IconButton style={{ color }} disabled={play?.src ? false : true} onClick={()=> {\n          if(!ref.current||isSetting) return;\n            \n          let r = ref.current;if(r.readyState <2) return;\n          setPlaying(!shouldPlay)\n          if(shouldPlay) {\n           r.pause()\n\n          }\n          else {\n         \n              if (r && (r.readyState >= 2))r.play()\n          }\n        }}>\n\n          {shouldPlay ? (<PauseIcon className={classes.playIcon} />) :\n            (<PlayArrowIcon className={classes.playIcon} />)}\n        </IconButton>\n\n        <IconButton style={{ color }} disabled={!playlist.length} onClick={() => {\n          let len = playlist.length;\n          if (!len) return;\n          if ((len > (mIndex + 1))) {\n            setIndex(mIndex + 1);\n          }\n          else setIndex(0);\n\n        }}>\n          <SkipNextIcon />\n        </IconButton>\n\n\n      </div> \n         <audio ref={ref}>\nAudio not suporteed\n      </audio>   <Grid container spacing={2} style={{\n        alignItems: 'center'\n      }}>\n\n\n        <Grid item>\n          <span>{durationToStr(elapsed)}</span>\n        </Grid>\n        <Grid item xs>\n          <Slider value={value} style={{ color }} disabled={play?.src ? false : true} onChange={(event, newValue) => {\n            let r = ref.current;\n            let num = Number(newValue)\n            if (r && play) {\n              r.pause()\n              let n = (Math.round((num / 100) * play.duration))\n              r.currentTime = n;\n              if(shouldPlay){\n              \n              \n              if (r && (r.readyState >= 2))r.play()\n              \n              }\n            }\n            setValue(num);\n          }} />\n        </Grid>\n        <Grid item>\n          <span>{durationToStr(play?.duration || 0)}</span>\n        </Grid>\n      </Grid>\n       </div>\n\n    </div>\n  )\n\n}\n\nexport default Player;\n\n\n\n","import { useState, useEffect } from 'react';\n\n// Our hook\nexport default function useDebounce<T = any>(value: T, delay: number) {\n  // State and setters for debounced value\n  const [debouncedValue, setDebouncedValue] = useState(value);\nconst [isSetting, setIsSetting] = useState(false)\n  useEffect(\n    () => {\n      // Set debouncedValue to value (passed in) after the specified delay\n      if(isSetting) return;\n      setIsSetting(true);\n      const handler = setTimeout(() => {\n        setDebouncedValue(value);\n        setIsSetting(false);\n      }, delay);\n\n      return () => {\n        clearTimeout(handler);\n      };\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [value]\n  );\n\n  return [debouncedValue, isSetting];\n}\n","// import logo from './logo.svg';\nimport React from 'react';\nimport { Provider } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport fun from './store';\n\nimport PodcastGrid from './components/PodcastGrid';\n\n// import Parser from 'rss-parser';\nimport Player from './components/Player'\nimport './App.css'\n\n\nfunction App() {\n  const { store } = fun();\n  return (\n    <div className=\"container\">\n              <Helmet>\n            <meta\n              property=\"og:image\"\n              content={'/pods.png'}\n            />\n            <meta\n              property=\"og:description\"\n              content={`A small podcast player`}\n            />\n            <meta name=\"image\" content={'/android-chrome-192x192.png'} />\n            \n                <meta\n      name=\"description\"\n      content=\"A small podcast player\"\n    />\n    <meta property=\"og:title\" content=\"500 Dash\" />\n    <meta\n      name=\"twitter:title\"\n      content=\"Krc Podcasts — A small podcast player for web\"\n    />\n          </Helmet>\n      <Provider store={store}>\n        <PodcastGrid />\n\n        <Player />\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"category\":\"Category_category__2tVYK\",\"active\":\"Category_active__3uZGC\"};"],"sourceRoot":""}